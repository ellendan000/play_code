test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReportForUnitTest'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.5"
}

def classFiles = files(files("$buildDir/classes/java/main").files.collect {
        fileTree(dir: it, includes: [
                'top/bujiaban/test/application/**/*',
                'top/bujiaban/test/domain/**/*',
        ], excludes: [
                "**/*MapperImpl.class"
        ])
    })
def sourceFiles = files('./src/main/java')

task jacocoTestReportForUnitTest(type: JacocoReport) {
    dependsOn test
    finalizedBy 'jacocoTestCoverageVerificationForUnitTest'
    executionData test

    reports {
        csv.enabled false
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/unitTest.xml")
        html.destination file("${buildDir}/reports/jacoco/test/html")
    }
    afterEvaluate {
        getSourceDirectories().setFrom(sourceFiles)
        getClassDirectories().setFrom(classFiles)
    }
}

task jacocoTestCoverageVerificationForUnitTest(type: JacocoCoverageVerification) {
    executionData test
    afterEvaluate {
        getClassDirectories().setFrom(classFiles)
    }
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }

        rule {
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
    }
}
